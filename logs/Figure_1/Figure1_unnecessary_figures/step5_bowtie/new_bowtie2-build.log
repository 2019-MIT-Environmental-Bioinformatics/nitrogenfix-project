Settings:
  Output files: "new_ANE.*.bt2"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 4 (one in 16)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  new_ANE.fa
Building a SMALL index
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:01
bmax according to bmaxDivN setting: 52459212
Using parameters --bmax 39344409 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 39344409 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:02
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 2.09837e+08 (target: 39344408)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 1
  No samples; assembling all-inclusive block
  Sorting block of length 209836851 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:36
Returning block of 209836852 for bucket 1
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 54545518
fchr[G]: 105120107
fchr[T]: 155707799
fchr[$]: 209836851
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 75105298 bytes to primary EBWT file: new_ANE.1.bt2
Wrote 52459220 bytes to secondary EBWT file: new_ANE.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 209836851
    bwtLen: 209836852
    sz: 52459213
    bwtSz: 52459213
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 13114804
    offsSz: 52459216
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 1092901
    numLines: 1092901
    ebwtTotLen: 69945664
    ebwtTotSz: 69945664
    color: 0
    reverse: 0
Total time for call to driver() for forward index: 00:00:55
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:01
  Time to reverse reference sequence: 00:00:00
bmax according to bmaxDivN setting: 52459212
Using parameters --bmax 39344409 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 39344409 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:03
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:02
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 2.09837e+08 (target: 39344408)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 1
  No samples; assembling all-inclusive block
  Sorting block of length 209836851 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:36
Returning block of 209836852 for bucket 1
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 54545518
fchr[G]: 105120107
fchr[T]: 155707799
fchr[$]: 209836851
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 75105298 bytes to primary EBWT file: new_ANE.rev.1.bt2
Wrote 52459220 bytes to secondary EBWT file: new_ANE.rev.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 209836851
    bwtLen: 209836852
    sz: 52459213
    bwtSz: 52459213
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 13114804
    offsSz: 52459216
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 1092901
    numLines: 1092901
    ebwtTotLen: 69945664
    ebwtTotSz: 69945664
    color: 0
    reverse: 1
Total time for backward call to driver() for mirror index: 00:00:56
Settings:
  Output files: "new_ANW.*.bt2"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 4 (one in 16)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  new_ANW.fa
Building a SMALL index
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:01
bmax according to bmaxDivN setting: 57452700
Using parameters --bmax 43089525 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 43089525 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:03
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:02
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 2.29811e+08 (target: 43089524)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 1
  No samples; assembling all-inclusive block
  Sorting block of length 229810801 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:41
Returning block of 229810802 for bucket 1
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 53895994
fchr[G]: 115133229
fchr[T]: 176255041
fchr[$]: 229810801
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 81694803 bytes to primary EBWT file: new_ANW.1.bt2
Wrote 57452708 bytes to secondary EBWT file: new_ANW.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 229810801
    bwtLen: 229810802
    sz: 57452701
    bwtSz: 57452701
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 14363176
    offsSz: 57452704
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 1196932
    numLines: 1196932
    ebwtTotLen: 76603648
    ebwtTotSz: 76603648
    color: 0
    reverse: 0
Total time for call to driver() for forward index: 00:01:01
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:01
  Time to reverse reference sequence: 00:00:00
bmax according to bmaxDivN setting: 57452700
Using parameters --bmax 43089525 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 43089525 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:03
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 2.29811e+08 (target: 43089524)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 1
  No samples; assembling all-inclusive block
  Sorting block of length 229810801 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:40
Returning block of 229810802 for bucket 1
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 53895994
fchr[G]: 115133229
fchr[T]: 176255041
fchr[$]: 229810801
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 81694803 bytes to primary EBWT file: new_ANW.rev.1.bt2
Wrote 57452708 bytes to secondary EBWT file: new_ANW.rev.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 229810801
    bwtLen: 229810802
    sz: 57452701
    bwtSz: 57452701
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 14363176
    offsSz: 57452704
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 1196932
    numLines: 1196932
    ebwtTotLen: 76603648
    ebwtTotSz: 76603648
    color: 0
    reverse: 1
Total time for backward call to driver() for mirror index: 00:01:02
Settings:
  Output files: "new_ASE.*.bt2"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 4 (one in 16)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  new_ASE.fa
Building a SMALL index
Reading reference sizes
  Time reading reference sizes: 00:00:00
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
bmax according to bmaxDivN setting: 24580240
Using parameters --bmax 18435180 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 18435180 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:01
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:00
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 9.8321e+07 (target: 18435179)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 1
  No samples; assembling all-inclusive block
  Sorting block of length 98320962 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:15
Returning block of 98320963 for bucket 1
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 23255614
fchr[G]: 49275528
fchr[T]: 75263013
fchr[$]: 98320962
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 37538483 bytes to primary EBWT file: new_ASE.1.bt2
Wrote 24580248 bytes to secondary EBWT file: new_ASE.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 98320962
    bwtLen: 98320963
    sz: 24580241
    bwtSz: 24580241
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 6145061
    offsSz: 24580244
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 512089
    numLines: 512089
    ebwtTotLen: 32773696
    ebwtTotSz: 32773696
    color: 0
    reverse: 0
Total time for call to driver() for forward index: 00:00:23
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
  Time to reverse reference sequence: 00:00:00
bmax according to bmaxDivN setting: 24580240
Using parameters --bmax 18435180 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 18435180 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:01
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 9.8321e+07 (target: 18435179)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 1
  No samples; assembling all-inclusive block
  Sorting block of length 98320962 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:15
Returning block of 98320963 for bucket 1
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 23255614
fchr[G]: 49275528
fchr[T]: 75263013
fchr[$]: 98320962
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 37538483 bytes to primary EBWT file: new_ASE.rev.1.bt2
Wrote 24580248 bytes to secondary EBWT file: new_ASE.rev.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 98320962
    bwtLen: 98320963
    sz: 24580241
    bwtSz: 24580241
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 6145061
    offsSz: 24580244
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 512089
    numLines: 512089
    ebwtTotLen: 32773696
    ebwtTotSz: 32773696
    color: 0
    reverse: 1
Total time for backward call to driver() for mirror index: 00:00:23
Settings:
  Output files: "new_ASW.*.bt2"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 4 (one in 16)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  new_ASW.fa
Building a SMALL index
Reading reference sizes
  Time reading reference sizes: 00:00:00
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:01
bmax according to bmaxDivN setting: 38658793
Using parameters --bmax 28994095 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 28994095 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:02
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.54635e+08 (target: 28994094)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 1
  No samples; assembling all-inclusive block
  Sorting block of length 154635173 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:26
Returning block of 154635174 for bucket 1
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 34067820
fchr[G]: 77487801
fchr[T]: 120728650
fchr[$]: 154635173
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 56557596 bytes to primary EBWT file: new_ASW.1.bt2
Wrote 38658800 bytes to secondary EBWT file: new_ASW.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 154635173
    bwtLen: 154635174
    sz: 38658794
    bwtSz: 38658794
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 9664699
    offsSz: 38658796
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 805392
    numLines: 805392
    ebwtTotLen: 51545088
    ebwtTotSz: 51545088
    color: 0
    reverse: 0
Total time for call to driver() for forward index: 00:00:39
Reading reference sizes
  Time reading reference sizes: 00:00:00
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:01
  Time to reverse reference sequence: 00:00:00
bmax according to bmaxDivN setting: 38658793
Using parameters --bmax 28994095 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 28994095 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:02
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.54635e+08 (target: 28994094)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 1
  No samples; assembling all-inclusive block
  Sorting block of length 154635173 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:26
Returning block of 154635174 for bucket 1
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 34067820
fchr[G]: 77487801
fchr[T]: 120728650
fchr[$]: 154635173
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 56557596 bytes to primary EBWT file: new_ASW.rev.1.bt2
Wrote 38658800 bytes to secondary EBWT file: new_ASW.rev.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 154635173
    bwtLen: 154635174
    sz: 38658794
    bwtSz: 38658794
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 9664699
    offsSz: 38658796
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 805392
    numLines: 805392
    ebwtTotLen: 51545088
    ebwtTotSz: 51545088
    color: 0
    reverse: 1
Total time for backward call to driver() for mirror index: 00:00:39
Settings:
  Output files: "new_ION.*.bt2"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 4 (one in 16)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  new_ION.fa
Building a SMALL index
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
bmax according to bmaxDivN setting: 41124870
Using parameters --bmax 30843653 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 30843653 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:02
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.64499e+08 (target: 30843652)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 1
  No samples; assembling all-inclusive block
  Sorting block of length 164499483 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:27
Returning block of 164499484 for bucket 1
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 43315482
fchr[G]: 82467244
fchr[T]: 121538945
fchr[$]: 164499483
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 59731458 bytes to primary EBWT file: new_ION.1.bt2
Wrote 41124876 bytes to secondary EBWT file: new_ION.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 164499483
    bwtLen: 164499484
    sz: 41124871
    bwtSz: 41124871
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 10281218
    offsSz: 41124872
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 856769
    numLines: 856769
    ebwtTotLen: 54833216
    ebwtTotSz: 54833216
    color: 0
    reverse: 0
Total time for call to driver() for forward index: 00:00:42
Reading reference sizes
  Time reading reference sizes: 00:00:00
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:01
  Time to reverse reference sequence: 00:00:00
bmax according to bmaxDivN setting: 41124870
Using parameters --bmax 30843653 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 30843653 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:02
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.64499e+08 (target: 30843652)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 1
  No samples; assembling all-inclusive block
  Sorting block of length 164499483 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:28
Returning block of 164499484 for bucket 1
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 43315482
fchr[G]: 82467244
fchr[T]: 121538945
fchr[$]: 164499483
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 59731458 bytes to primary EBWT file: new_ION.rev.1.bt2
Wrote 41124876 bytes to secondary EBWT file: new_ION.rev.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 164499483
    bwtLen: 164499484
    sz: 41124871
    bwtSz: 41124871
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 10281218
    offsSz: 41124872
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 856769
    numLines: 856769
    ebwtTotLen: 54833216
    ebwtTotSz: 54833216
    color: 0
    reverse: 1
Total time for backward call to driver() for mirror index: 00:00:42
Settings:
  Output files: "new_IOS.*.bt2"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 4 (one in 16)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  new_IOS.fa
Building a SMALL index
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
bmax according to bmaxDivN setting: 38931450
Using parameters --bmax 29198588 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 29198588 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:02
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.55726e+08 (target: 29198587)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 1
  No samples; assembling all-inclusive block
  Sorting block of length 155725803 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:26
Returning block of 155725804 for bucket 1
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 37213791
fchr[G]: 78076620
fchr[T]: 118775046
fchr[$]: 155725803
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 56846685 bytes to primary EBWT file: new_IOS.1.bt2
Wrote 38931456 bytes to secondary EBWT file: new_IOS.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 155725803
    bwtLen: 155725804
    sz: 38931451
    bwtSz: 38931451
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 9732863
    offsSz: 38931452
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 811072
    numLines: 811072
    ebwtTotLen: 51908608
    ebwtTotSz: 51908608
    color: 0
    reverse: 0
Total time for call to driver() for forward index: 00:00:40
Reading reference sizes
  Time reading reference sizes: 00:00:00
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:01
  Time to reverse reference sequence: 00:00:00
bmax according to bmaxDivN setting: 38931450
Using parameters --bmax 29198588 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 29198588 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:02
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.55726e+08 (target: 29198587)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 1
  No samples; assembling all-inclusive block
  Sorting block of length 155725803 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:26
Returning block of 155725804 for bucket 1
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 37213791
fchr[G]: 78076620
fchr[T]: 118775046
fchr[$]: 155725803
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 56846685 bytes to primary EBWT file: new_IOS.rev.1.bt2
Wrote 38931456 bytes to secondary EBWT file: new_IOS.rev.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 155725803
    bwtLen: 155725804
    sz: 38931451
    bwtSz: 38931451
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 9732863
    offsSz: 38931452
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 811072
    numLines: 811072
    ebwtTotLen: 51908608
    ebwtTotSz: 51908608
    color: 0
    reverse: 1
Total time for backward call to driver() for mirror index: 00:00:39
Settings:
  Output files: "new_MED.*.bt2"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 4 (one in 16)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  new_MED.fa
Building a SMALL index
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:01
bmax according to bmaxDivN setting: 65016796
Using parameters --bmax 48762597 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 48762597 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:03
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:02
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 2.60067e+08 (target: 48762596)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 1
  No samples; assembling all-inclusive block
  Sorting block of length 260067185 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:49
Returning block of 260067186 for bucket 1
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 76131262
fchr[G]: 130386051
fchr[T]: 184288580
fchr[$]: 260067185
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 91785699 bytes to primary EBWT file: new_MED.1.bt2
Wrote 65016804 bytes to secondary EBWT file: new_MED.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 260067185
    bwtLen: 260067186
    sz: 65016797
    bwtSz: 65016797
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 16254200
    offsSz: 65016800
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 1354517
    numLines: 1354517
    ebwtTotLen: 86689088
    ebwtTotSz: 86689088
    color: 0
    reverse: 0
Total time for call to driver() for forward index: 00:01:13
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
  Time to reverse reference sequence: 00:00:01
bmax according to bmaxDivN setting: 65016796
Using parameters --bmax 48762597 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 48762597 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:03
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:02
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 2.60067e+08 (target: 48762596)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 1
  No samples; assembling all-inclusive block
  Sorting block of length 260067185 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:48
Returning block of 260067186 for bucket 1
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 76131262
fchr[G]: 130386051
fchr[T]: 184288580
fchr[$]: 260067185
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 91785699 bytes to primary EBWT file: new_MED.rev.1.bt2
Wrote 65016804 bytes to secondary EBWT file: new_MED.rev.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 260067185
    bwtLen: 260067186
    sz: 65016797
    bwtSz: 65016797
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 16254200
    offsSz: 65016800
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 1354517
    numLines: 1354517
    ebwtTotLen: 86689088
    ebwtTotSz: 86689088
    color: 0
    reverse: 1
Total time for backward call to driver() for mirror index: 00:01:12
Settings:
  Output files: "new_PON.*.bt2"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 4 (one in 16)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  new_PON.fa
Building a SMALL index
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:01
bmax according to bmaxDivN setting: 49517462
Using parameters --bmax 37138097 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 37138097 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:02
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.9807e+08 (target: 37138096)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 1
  No samples; assembling all-inclusive block
  Sorting block of length 198069850 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:34
Returning block of 198069851 for bucket 1
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 48613395
fchr[G]: 99330716
fchr[T]: 149852440
fchr[$]: 198069850
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 70987785 bytes to primary EBWT file: new_PON.1.bt2
Wrote 49517468 bytes to secondary EBWT file: new_PON.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 198069850
    bwtLen: 198069851
    sz: 49517463
    bwtSz: 49517463
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 12379366
    offsSz: 49517464
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 1031614
    numLines: 1031614
    ebwtTotLen: 66023296
    ebwtTotSz: 66023296
    color: 0
    reverse: 0
Total time for call to driver() for forward index: 00:00:52
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
  Time to reverse reference sequence: 00:00:00
bmax according to bmaxDivN setting: 49517462
Using parameters --bmax 37138097 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 37138097 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:02
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.9807e+08 (target: 37138096)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 1
  No samples; assembling all-inclusive block
  Sorting block of length 198069850 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:34
Returning block of 198069851 for bucket 1
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 48613395
fchr[G]: 99330716
fchr[T]: 149852440
fchr[$]: 198069850
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 70987785 bytes to primary EBWT file: new_PON.rev.1.bt2
Wrote 49517468 bytes to secondary EBWT file: new_PON.rev.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 198069850
    bwtLen: 198069851
    sz: 49517463
    bwtSz: 49517463
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 12379366
    offsSz: 49517464
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 1031614
    numLines: 1031614
    ebwtTotLen: 66023296
    ebwtTotSz: 66023296
    color: 0
    reverse: 1
Total time for backward call to driver() for mirror index: 00:00:52
Settings:
  Output files: "new_PSE.*.bt2"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 4 (one in 16)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  new_PSE.fa
Building a SMALL index
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:01
bmax according to bmaxDivN setting: 89622840
Using parameters --bmax 67217130 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 67217130 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:04
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:03
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 3.58491e+08 (target: 67217129)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 1
  No samples; assembling all-inclusive block
  Sorting block of length 358491360 for bucket 1
  (Using difference cover)
  Sorting block time: 00:01:09
Returning block of 358491361 for bucket 1
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 89250704
fchr[G]: 179635645
fchr[T]: 269668262
fchr[$]: 358491360
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 125073395 bytes to primary EBWT file: new_PSE.1.bt2
Wrote 89622848 bytes to secondary EBWT file: new_PSE.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 358491360
    bwtLen: 358491361
    sz: 89622840
    bwtSz: 89622841
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 22405711
    offsSz: 89622844
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 1867143
    numLines: 1867143
    ebwtTotLen: 119497152
    ebwtTotSz: 119497152
    color: 0
    reverse: 0
Total time for call to driver() for forward index: 00:01:42
Reading reference sizes
  Time reading reference sizes: 00:00:02
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:01
  Time to reverse reference sequence: 00:00:00
bmax according to bmaxDivN setting: 89622840
Using parameters --bmax 67217130 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 67217130 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:05
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:02
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 3.58491e+08 (target: 67217129)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 1
  No samples; assembling all-inclusive block
  Sorting block of length 358491360 for bucket 1
  (Using difference cover)
  Sorting block time: 00:01:09
Returning block of 358491361 for bucket 1
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 89250704
fchr[G]: 179635645
fchr[T]: 269668262
fchr[$]: 358491360
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 125073395 bytes to primary EBWT file: new_PSE.rev.1.bt2
Wrote 89622848 bytes to secondary EBWT file: new_PSE.rev.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 358491360
    bwtLen: 358491361
    sz: 89622840
    bwtSz: 89622841
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 22405711
    offsSz: 89622844
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 1867143
    numLines: 1867143
    ebwtTotLen: 119497152
    ebwtTotSz: 119497152
    color: 0
    reverse: 1
Total time for backward call to driver() for mirror index: 00:01:43
Settings:
  Output files: "new_PSW.*.bt2"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 4 (one in 16)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  new_PSW.fa
Building a SMALL index
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:01
bmax according to bmaxDivN setting: 79149078
Using parameters --bmax 59361809 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 59361809 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:04
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:02
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 3.16596e+08 (target: 59361808)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 1
  No samples; assembling all-inclusive block
  Sorting block of length 316596313 for bucket 1
  (Using difference cover)
  Sorting block time: 00:01:00
Returning block of 316596314 for bucket 1
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 77924904
fchr[G]: 158751747
fchr[T]: 239124338
fchr[$]: 316596313
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 110924108 bytes to primary EBWT file: new_PSW.1.bt2
Wrote 79149084 bytes to secondary EBWT file: new_PSW.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 316596313
    bwtLen: 316596314
    sz: 79149079
    bwtSz: 79149079
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 19787270
    offsSz: 79149080
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 1648940
    numLines: 1648940
    ebwtTotLen: 105532160
    ebwtTotSz: 105532160
    color: 0
    reverse: 0
Total time for call to driver() for forward index: 00:01:29
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:01
  Time to reverse reference sequence: 00:00:00
bmax according to bmaxDivN setting: 79149078
Using parameters --bmax 59361809 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 59361809 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:04
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:02
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 3.16596e+08 (target: 59361808)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 1
  No samples; assembling all-inclusive block
  Sorting block of length 316596313 for bucket 1
  (Using difference cover)
  Sorting block time: 00:01:00
Returning block of 316596314 for bucket 1
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 77924904
fchr[G]: 158751747
fchr[T]: 239124338
fchr[$]: 316596313
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 110924108 bytes to primary EBWT file: new_PSW.rev.1.bt2
Wrote 79149084 bytes to secondary EBWT file: new_PSW.rev.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 316596313
    bwtLen: 316596314
    sz: 79149079
    bwtSz: 79149079
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 19787270
    offsSz: 79149080
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 1648940
    numLines: 1648940
    ebwtTotLen: 105532160
    ebwtTotSz: 105532160
    color: 0
    reverse: 1
Total time for backward call to driver() for mirror index: 00:01:30
Settings:
  Output files: "new_RED.*.bt2"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 4 (one in 16)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  new_RED.fa
Building a SMALL index
Reading reference sizes
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:01
bmax according to bmaxDivN setting: 72863828
Using parameters --bmax 54647871 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 54647871 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:04
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:02
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 2.91455e+08 (target: 54647870)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 1
  No samples; assembling all-inclusive block
  Sorting block of length 291455315 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:55
Returning block of 291455316 for bucket 1
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 70577065
fchr[G]: 146165016
fchr[T]: 221314777
fchr[$]: 291455315
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 102358593 bytes to primary EBWT file: new_RED.1.bt2
Wrote 72863836 bytes to secondary EBWT file: new_RED.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 291455315
    bwtLen: 291455316
    sz: 72863829
    bwtSz: 72863829
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 18215958
    offsSz: 72863832
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 1517997
    numLines: 1517997
    ebwtTotLen: 97151808
    ebwtTotSz: 97151808
    color: 0
    reverse: 0
Total time for call to driver() for forward index: 00:01:21
Reading reference sizes
  Time reading reference sizes: 00:00:02
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
  Time to reverse reference sequence: 00:00:01
bmax according to bmaxDivN setting: 72863828
Using parameters --bmax 54647871 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 54647871 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:03
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:02
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 2.91455e+08 (target: 54647870)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 1
  No samples; assembling all-inclusive block
  Sorting block of length 291455315 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:54
Returning block of 291455316 for bucket 1
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 70577065
fchr[G]: 146165016
fchr[T]: 221314777
fchr[$]: 291455315
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 102358593 bytes to primary EBWT file: new_RED.rev.1.bt2
Wrote 72863836 bytes to secondary EBWT file: new_RED.rev.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 291455315
    bwtLen: 291455316
    sz: 72863829
    bwtSz: 72863829
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 18215958
    offsSz: 72863832
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 1517997
    numLines: 1517997
    ebwtTotLen: 97151808
    ebwtTotSz: 97151808
    color: 0
    reverse: 1
Total time for backward call to driver() for mirror index: 00:01:22
Settings:
  Output files: "new_SOC.*.bt2"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 4 (one in 16)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  new_SOC.fa
Building a SMALL index
Reading reference sizes
  Time reading reference sizes: 00:00:00
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:01
bmax according to bmaxDivN setting: 8094481
Using parameters --bmax 6070861 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 6070861 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:00
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:00
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 3.23779e+07 (target: 6070860)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 1
  No samples; assembling all-inclusive block
  Sorting block of length 32377926 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:04
Returning block of 32377927 for bucket 1
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 9502869
fchr[G]: 16235489
fchr[T]: 22930251
fchr[$]: 32377926
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 15055725 bytes to primary EBWT file: new_SOC.1.bt2
Wrote 8094488 bytes to secondary EBWT file: new_SOC.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 32377926
    bwtLen: 32377927
    sz: 8094482
    bwtSz: 8094482
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 2023621
    offsSz: 8094484
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 168636
    numLines: 168636
    ebwtTotLen: 10792704
    ebwtTotSz: 10792704
    color: 0
    reverse: 0
Total time for call to driver() for forward index: 00:00:06
Reading reference sizes
  Time reading reference sizes: 00:00:00
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:01
  Time to reverse reference sequence: 00:00:00
bmax according to bmaxDivN setting: 8094481
Using parameters --bmax 6070861 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 6070861 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:00
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:00
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 3.23779e+07 (target: 6070860)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 1
  No samples; assembling all-inclusive block
  Sorting block of length 32377926 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:04
Returning block of 32377927 for bucket 1
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 9502869
fchr[G]: 16235489
fchr[T]: 22930251
fchr[$]: 32377926
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 15055725 bytes to primary EBWT file: new_SOC.rev.1.bt2
Wrote 8094488 bytes to secondary EBWT file: new_SOC.rev.2.bt2
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 32377926
    bwtLen: 32377927
    sz: 8094482
    bwtSz: 8094482
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 2023621
    offsSz: 8094484
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 168636
    numLines: 168636
    ebwtTotLen: 10792704
    ebwtTotSz: 10792704
    color: 0
    reverse: 1
Total time for backward call to driver() for mirror index: 00:00:07
